<!DOCTYPE html>
<html>
  <head>
    <title><%=typeof title == 'undefined' ? 'New Sails App' : title%></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================
        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).
        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/css/Control.FullScreen.css">
    <link rel="stylesheet" href="/styles/css/Control.Geocoder.css">
    <link rel="stylesheet" href="/styles/css/jquery-ui.css">
    <link rel="stylesheet" href="/styles/css/L.Control.Locate.min.css">
    <link rel="stylesheet" href="/styles/css/leaflet-routing-machine.css">
    <link rel="stylesheet" href="/styles/css/leaflet.css">
    <link rel="stylesheet" href="/styles/css/leaflet.draw.css">
    <link rel="stylesheet" href="/styles/custom.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/layout.css">
    <link rel="stylesheet" href="/styles/nhgs.css">
    <link rel="stylesheet" href="/styles/pages.css">
    <link rel="stylesheet" href="/styles/react-table.css">
    <link rel="stylesheet" href="/styles/responsive.css">
    <!--STYLES END-->
  </head>
   <script>
    //    var recognition = new webkitSpeechRecognition();
    //   recognition.continuous = true;
    //  var output = document.getElementById('output');
    //   recognition.onresult = function(event) {
    //     console.log(event);
    //   output.textContent = event.results[0][0].transcript;
      function like(){
        console.log('like');
        
        var recognition = new webkitSpeechRecognition();
      // recognition.continuous = true;
      // recognition.lang= "vie";
        
      //  console.log(recognition);
        recognition.onresult = function(e) {
          console.log(e);
        // var rs = event.results[event.results.length-1]
          // if(event.results.length>0){
          //    var rs = event.results[event.results.length-1];
          //    if(rs.isFinal){
          //      console.log(rs[0].transcript);
          //    }
          // }
        //  output.textContent = event.results[0][0].transcript;
        }
        recognition.start();
    }
    
     
    </script>
  <body >
    <%- body %>

    <div id="ouput"></div>
    <div id="layout"></div>
    <!--
        Client-side Templates
        ========================
        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.
        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            + Import templates from other directories
            + Use a different template engine (handlebars